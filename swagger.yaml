swagger: "2.0"
info:
  version: "1.0.0"
  title: "Ingresse Backend Test"
host: "localhost:5000"
basePath: "/"
schemes:
- "http"
consumes:
- "application/json"
paths:
  /users:
    post:
      tags:
      - users
      summary: "Adds an User"
      description: ""
      parameters:
      - in: "body"
        name: "body"
        description: "User to be added"
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        201:
          description: "Created"
        422:
          description: "Invalid input"
          
    get:
      tags:
      - users
      summary: "Lists users"
      parameters: 
      - in: query
        name: "_search"
        type: string
        description: "Search terms in the format key:value, ie. `_search=name:Phillip`"
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
        400:
          description: Invalid Query
          
  /users/{ID}:
    parameters:
    - in: path
      name: ID
      required: true
      type: string
      
    put:
      tags:
      - users
      summary: Replace an user
      parameters: 
      - in: body
        name: body
        schema:
          $ref: '#/definitions/User'
      responses:
        204:
          description: OK
        404:
          description: User not found
        422:
          description: Invalid user
        400:
          description: Invalid ID
    
    delete:
      summary: Remove an user 
      tags:
      - users
      responses:
        204:
          description: OK
        404:
          description: User not found
        400:
          description: Invalid ID
          
    get:
      summary: Gets one individual user
      tags:
      - users
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/User'
        404:
          description: User not found
        400: 
          description: Invalid ID
    
    

definitions:
  User:
    type: object
    properties:
      _id:
        type: string
        format: ObjectID
      name:
        type: string
      dateOfBirth:
        type: string
        format: ISODate
      cpf:
        type: string
      username:
        type: string
    required: 
    - name
    - cpf
    - username